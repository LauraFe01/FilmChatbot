version: "3.1"

intents:
  - start_chat
  - end_chat
  - ask_top_movies
  - ask_director
  - ask_movies_by_director
  - ask_genre
  - ask_movies_by_actor
  - ask_movie_info
  - ask_film_count
  - out_of_scope
  - provide_form_quality
  - provide_form_author
  - provide_min_release_year
  - provide_movie_recommendation
  - provide_genre
  - provide_gross_votes_movie_recommendation
  - provide_votes_form
  - ask_capabilities
  - nlu_fallback
  - skip
  - stop

forms:
  film_count_form:
    required_slots:
      - form_author
      - form_quality
  
  movie_recommendation_form:
    required_slots:
      - min_release_year
      - form_genre
      - form_quality
  
  gross_votes_recommendation_form:
    required_slots:
      - form_votes
      - form_gross

entities:
  - movie
  - genre
  - director
  - actor
  - form_quality
  - form_author
  - min_release_year
  - form_genre
  - form_votes
  - form_gross

slots:
  movie:
    type: text
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: movie

  genre:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: genre

  director:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: director

  actor:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: actor

  form_quality:
    type: float
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: form_quality
      - type: from_trigger_intent
        intent: skip
        value: "none"

  form_author:
    type: text
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: form_author
  
  min_release_year:
    type: float
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: min_release_year

  form_genre:
    type: list
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: form_genre
  
  form_votes:
    type: float
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: form_votes

  form_gross:
    type: float
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: form_gross

actions:
  - action_list_top_movies
  - action_ask_director
  - action_ask_genre
  - action_movies_by_director
  - action_movies_by_actor
  - action_ask_movie_info
  - action_count_films
  - validate_film_count_form
  - action_reset_director_form
  - utter_form_stopped
  - action_provide_movie_recommendation
  - validate_movie_recommendation_form
  - action_reset_movie_preferences
  - action_gross_votes_recommendation
  - action_reset_gross_votes_recommendation_form 
  - validate_gross_votes_recommendation_form
  - action_ask_clarification
  - action_remove_unnecessary_slots
  - utter_fallback
  - action_resume_form_movie_reccomendation
  - action_resume_form_movie_count
  - action_resume_form_movie_gross




responses:
  utter_start:
    - text: "🎉 Welcome! I'm your personal movie assistant 🎥. Here's what I can do for you:
      \n- 🎬 Personalized recommendations: I can help you find movies based on your preferences (genre, year, rating, and more).
      \n- 📝 Movie information: I provide details about plots, directors, actors, and genres.
      \n- 🎥 Movies by director or actor: I list films made by a specific director or featuring a specific actor.
      \n- ⭐ Top charts: I can show you the highest-rated movies or current blockbusters.


      \nI'm here to help you discover your next favorite movie. Let's start! 🍿✨"
  
  utter_end:
    - text: "Goodbye! Let me know if you need help again."
  
  utter_capabilities:
    - text: "🎬 Hi! I'm your movie assistant! Here's what I can do for you:
    
      \n🏆 1. Find the most acclaimed movies
      \nℹ️ 2. Provide information about specific movies
      \n🎥 3. Find movies by director
      \n🌟 4. Find movies by actor
      \n🎭 5. Tell you about movie genres
      \n🎯 6. Give you personalized movie recommendations based on your preferences
      \n📊 7. Count films by director
      \n💰 8. Recommend movies based on ratings and box office performance
      
      \nFeel free to ask me about any of these topics! For example, you can say:
      \n- 'What are the best movies of all time?'
      \n- 'Who directed Inception?'
      \n- 'Can you recommend me a movie?'
      \n- 'What movies did Christopher Nolan make?'"
  

  utter_form_stopped:
    - text: "🛑 Hey, it's okay! Take your time. Choosing a film is not easy. 🍿"

  utter_ask_form_author:
    - text: "🖋️ What is the name of the author? 🎬"

  utter_ask_form_quality:
    - text: "⭐ Are you only interested in movies with a minimum rating? (If not, type 'skip')"

  utter_no_movies_found:
    - text: "❌ Sorry, I couldn't find any movies matching your preferences. Try something different! 🎥"
  
  utter_ask_movie_recommendation_form_min_release_year:
  - text: "🎉 Sure! To recommend the perfect movie for you, I’ll start by asking a few questions:
  
  
  \nWhat is the minimum release year for the movie you're looking for? "
    buttons:
      - title: " 📅 1920"
        payload: '/provide_min_release_year{"min_release_year": 1920}'
      - title: " 📅 1930"
        payload: '/provide_min_release_year{"min_release_year": 1930}'
      
      - title: " 📅 1940"
        payload: '/provide_min_release_year{"min_release_year": 1940}'
      - title: " 📅 1950"
        payload: '/provide_min_release_year{"min_release_year": 1950}'
      
      - title: " 📅 1960"
        payload: '/provide_min_release_year{"min_release_year": 1960}'
      - title: " 📅 1970"
        payload: '/provide_min_release_year{"min_release_year": 1970}'
      
      - title: " 📅 1980"
        payload: '/provide_min_release_year{"min_release_year": 1980}'
      - title: " 📅 1990"
        payload: '/provide_min_release_year{"min_release_year": 1990}'
      
      - title: "📅 2000"
        payload: '/provide_min_release_year{"min_release_year": 2000}'
      - title: "📅 2010"
        payload: '/provide_min_release_year{"min_release_year": 2010}'
    button_type: "vertical"

          
  utter_ask_movie_recommendation_form_form_genre:
    - text: "🎬 What genre of movie do you prefer? (e.g., action, comedy, drama)"

  utter_ask_movie_recommendation_form_form_quality:
    - text: "⭐ What is the minimum rating you want for the movie (0.0-10.0)?"
  
  utter_ask_form_votes:
  - text: "🎥 The world is full of amazing films! 🌍 Use the number of votes as a filter to find the most popular ones. 📝 \nPlease provide me with the number of votes for which you want to filter the movies"

  utter_ask_form_gross:
    - text: "💰 Much better! Give me one more hand, please. \nWe also filter based on film box office income. \nPlease select the numberò. I'm schematic. 📊"
      buttons:
        - title: "60.000 💵"
          payload: '/provide_gross_votes_movie_recommendation{"form_gross": 60000}'
        - title: "150.000 💵"
          payload: '/provide_gross_votes_movie_recommendation{"form_gross": 150000}'
        - title: "500.000 💵"
          payload: '/provide_gross_votes_movie_recommendation{"form_gross": 500000}'
        - title: "1.000.000 💵"
          payload: '/provide_gross_votes_movie_recommendation{"form_gross": 1000000}'
        - title: "3.000.000 💵"
          payload: '/provide_gross_votes_movie_recommendation{"form_gross": 3000000}'
      button_type: "vertical"
    
  utter_out_of_scope:
    - text: "❌ I'm sorry, I can't help with that. Can I assist you with something else?"
  
  utter_fallback:
    - text: "❌ I'm sorry, your answer is not appropriate whith the question"

  utter_no_form_in_form:
    - text: "❌ Please complete the form before activating other actions"





session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
